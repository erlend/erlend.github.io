name: Jekyll
on: [push]

env:
  # Install Ruby gems to vendor/bundle folder for caching purposes
  BUNDLE_PATH: vendor/bundle
  # Enable experimental Mise feature for hooks to work
  MISE_EXPERIMENTAL: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up build tools
        uses: jdx/mise-action@v3

      - name: Cache Ruby gems
        uses: actions/cache@v4
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Cache Node modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Build website
        run: mise run build

      - name: Fix permissions
        run: |
          chmod -c -R +rX "_site/" | while read line; do
            echo "::warning title=Invalid file permissions automatically fixed::$line"
          done

      - name: Check HTML syntax
        run: mise run lint:html

      - name: Check Ruby syntax
        run: mise run lint:ruby --format=github

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site/

  deploy-cloudflare:
    needs: build

    permissions:
      contents: read
      deployments: write
      pull-requests: write

    runs-on: ubuntu-latest
    steps:
      - name: Download all artifact
        uses: actions/download-artifact@v4
        with:
          name: github-pages

      - name: Extract site artifact
        run: mkdir -p _site && tar -C _site -xf artifact.tar && ls -R

      - name: Deploy
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy _site --project-name=erlend-codes --branch=${{ github.head_ref || github.ref_name }}
          # Optional: Enable this if you want to have GitHub Deployments triggered
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

  deploy-github:
    # Only run on default branch as we don't want to deploy for pull requests
    if: github.ref == format('refs/heads/{0}', github.event.repository.default_branch)

    # Add a dependency to the build job
    needs: build

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
